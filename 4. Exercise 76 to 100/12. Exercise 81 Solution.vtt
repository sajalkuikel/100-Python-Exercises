WEBVTT

0
00:01.240 --> 00:04.810
Hi again! This is the solution to exercise 81.

1
00:05.340 --> 00:12.130
And in this exercise you were asked to prompt the user to enter a username and you wanted to check

2
00:12.520 --> 00:19.150
that user name against some existing user names you have in a text file and then you also wanted the

3
00:19.150 --> 00:24.210
user to add a user password, a new password and you want to check that password.

4
00:24.430 --> 00:34.990
But you know this from the previous exercises and therefore this part here is exactly the same as exercise

5
00:35.070 --> 00:36.200
80.

6
00:36.220 --> 00:42.070
So this is a part of that has to do with a prompt for the password and checking for a password and so

7
00:42.070 --> 00:42.950
on.

8
00:43.120 --> 00:45.400
But here we have another while loop.

9
00:45.430 --> 00:53.860
So this is our program we have two while loos, one asking for a user name and one asking for a password. As you know

10
00:53.860 --> 00:56.710
Python executes a scripts from top to bottom.

11
00:56.710 --> 01:02.160
So first it will execute this while loop and then it will go to the next ones

12
01:02.170 --> 01:10.040
once it has completed this first loop, and so so while true which is always true

13
01:10.300 --> 01:18.920
this script will always be executing unless you break it under some condition.

14
01:19.270 --> 01:27.280
And so you first want to ask the user for a user name and you store that username to usr variable and then

15
01:27.280 --> 01:35.080
you open a text file where you have some user names, you have the existing user names of your application

16
01:35.080 --> 01:42.610
let's say and you don't want the user to enter a similar user name that this is that's the list. You

17
01:42.610 --> 01:46.550
want to create a list out of that content.

18
01:46.570 --> 01:53.740
So a list with the existing usernames, and we use read lines for that which creates a list object

19
01:54.040 --> 02:00.790
with items where each of the list items corresponds with a line in the text file.

20
02:00.790 --> 02:05.690
However we have a small problem there, these lines they have brake lines.

21
02:05.930 --> 02:12.940
So we want to strip the brake lines using strip and we use a list comprehension because the users is a list,

22
02:12.970 --> 02:20.620
so we want to iterate through all the items, and so we apply strip on the items for items in a list

23
02:20.620 --> 02:31.410
of users and then we check the usr variable which is holding the string that the user entered, submitted

24
02:31.420 --> 02:33.000
through input.

25
02:33.370 --> 02:39.280
So if  that string is in list users then you want to print out user name exists and you want

26
02:39.280 --> 02:42.520
to continue the script over again,

27
02:42.730 --> 02:48.740
the while loop over again, so you want to ask for the user for username again and open the file again so on.

28
02:50.260 --> 02:52.360
Otherwise, if that username

29
02:52.450 --> 02:59.780
is not in the text file, than you want to print out these other lines in here which is a message username

30
02:59.830 --> 03:02.590
is fine and you want to break the loop.

31
03:03.010 --> 03:05.270
So you're done with this while loop.

32
03:05.530 --> 03:10.740
And as you know Python executes scripts from top to bottom so it will go to the next line which is empty.

33
03:10.840 --> 03:15.600
And then to the next line which is another while loop and I wont go and explain this

34
03:15.620 --> 03:18.880
now because we did that in the previous exercise.

35
03:19.030 --> 03:22.770
So you know this this is exactly the same as a previous exercise.

36
03:22.780 --> 03:24.240
And yeah, this is it.

37
03:24.610 --> 03:27.760
I hope it was clear and I'll talk to you later.